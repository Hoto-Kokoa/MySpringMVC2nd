<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:scope="http://www.springframework.org/schema/c" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">




<!--    <bean id="employeeDAO" class="com.test.dao.IEmployeeDAO"/>-->

    <bean id="employeeService" class="com.test.service.Impl.EmployeeServiceImpl">
        <property name="dao" ref="IEmployeeDAO" />
    </bean>


<!--配置数据库连接池-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="com.mysql.cj.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://localhost:3306/test_01?serverTimezone=Asia/Shanghai&amp;useSSL=false"/>
        <property name="username" value="root"/>
        <property name="password" value="123456"/>
    </bean>





<!--  配置MyBatis  -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
    </bean>
<!--    -->
<!--    扫描dao层,生成代理对象-->
    <bean id="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.test.dao"></property>
    </bean>


<!--    what 做什么增强-->
    <bean id="txManager" class="com.test.tx.TransactionManager"/>
    <aop:config proxy-target-class="true">
        <aop:pointcut id="txPt" expression="execution(* com.test.service.*Service.*(..)))"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="txPt"/>

        <aop:aspect ref="txManager">   <!--   关联增强-->

<!--            where 在哪些保重的哪些类中的哪些方法做增强-->
            <aop:pointcut id="txPoint" expression="execution(* com.test.service.*Service.*(..))"/>
<!--            when 在方法执行的什么时机做增强-->
<!--            <aop:before method="begin" pointcut-ref="txPoint"/>-->
<!--            <aop:after-returning method="commit" pointcut-ref="txPoint"/>-->
<!--            <aop:after-throwing method="rollback" pointcut-ref="txPoint" throwing="ex"/>-->
            <aop:around method="aroundMethod" pointcut-ref="txPoint"/>

        </aop:aspect>
    </aop:config>

<!--    SPring的事务管理器-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

<!--    事务的通知引用事务管理器-->
    <tx:advice id="txAdvice">
        <tx:attributes>
            <tx:method name="*" timeout="5"/>
            <tx:method name="update" read-only="true"></tx:method>
        </tx:attributes>
    </tx:advice>



</beans>